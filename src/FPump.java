import java.util.Random;

public class FPump {
    private FOrder order;//Данные о заказе

    public void getNewOrder(FOrder order) {//Метод, получающий новый заказ
        this.order = order;
    }

    //Этот метод учитывает случайные факторы, чтобы смоделировать возможные ошибки в выдаче топлива, что
    // может произойти в реальной жизни. В зависимости от случайной вероятности, определенная часть
    // объема может быть уменьшена, создавая вариабельность в результате заказа.
    public int giveFuel() {
        Random rnd = new Random();
        int fVolume = order.getSum() / order.getFType().getPrice();//Рассчитывается базовый объем
        // топлива на основе суммы заказа и цены топлива. Разделяется сумма заказа на цену единицы
        // топлива (order.getFuelType().getPrice()) для получения базового объема.
        double rndErrProbability = rnd.nextDouble();//Генерируется случайная вероятность ошибки
        // (случайное число от 0 до 1), используя метод nextDouble() объекта Random
        if(rndErrProbability < 0.3) {//Проверяется, что вероятность ошибки меньше 0,3 (30%).
            // Это создает вероятность 30% для возникновения ошибки в объеме топлива.
            fVolume -= rnd.nextInt(3);//Если вероятность ошибки меньше 30%, из базового объема
            // топлива вычитается случайное целое число от 0 до 2 (3 исключительно). Это имитирует
            // случайное уменьшение объема топлива.
        }
        return fVolume;//Возвращается объем топлива, который может быть уменьшен из-за случайной ошибки.
    }

    //Метод, проверяющий соответствие между теоретическим и фактическим объемом топлива. Возвращает
    // булево значение (true или false), показывая, был ли заказ выполнен корректно или нет.
    public boolean checkFuelVolume(int actVolume) {
        int thVolume = order.getSum() / order.getFType().getPrice();// Рассчитывается теоретический
        // объем топлива на основе суммы заказа и цены топлива. Разделяется сумма заказа на цену единицы
        // топлива (order.getFuelType().getPrice()) для получения теоретического объема.
        return thVolume == actVolume ? true : false;//Сравнивается теоретический объем с фактическим
        // объемом топлива, который был выдан. Если они совпадают, метод возвращает true, что означает,
        // что заказ был выполнен правильно. Если объемы не совпадают, метод возвращает false, указывая
        // на ошибку в выполнении заказа.
    }

    public FType getFuelType() {//Метод, возвращающий тип топлива заказа
        return order.getFType();
    }

    public int getSum() {//Метод, возвращающий сумму заказа
        return order.getSum();
    }
}
